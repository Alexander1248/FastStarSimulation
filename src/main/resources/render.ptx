//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-30978841
// Cuda compilation tools, release 11.6, V11.6.112
// Based on NVVM 7.0.1
//

.version 7.6
.target sm_86
.address_size 64

	// .globl	_Z6renderiiiddddPdS_S_S_S_S_S_S_Ph
.func  (.param .b64 func_retval0) __internal_accurate_pow
(
	.param .b64 __internal_accurate_pow_param_0,
	.param .b64 __internal_accurate_pow_param_1
)
;

.visible .entry _Z6renderiiiddddPdS_S_S_S_S_S_S_Ph(
	.param .u32 _Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_0,
	.param .u32 _Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_1,
	.param .u32 _Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_2,
	.param .f64 _Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_3,
	.param .f64 _Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_4,
	.param .f64 _Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_5,
	.param .f64 _Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_6,
	.param .u64 _Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_7,
	.param .u64 _Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_8,
	.param .u64 _Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_9,
	.param .u64 _Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_10,
	.param .u64 _Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_11,
	.param .u64 _Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_12,
	.param .u64 _Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_13,
	.param .u64 _Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_14,
	.param .u64 _Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_15
)
{
	.reg .pred 	%p<80>;
	.reg .b32 	%r<94>;
	.reg .f64 	%fd<88>;
	.reg .b64 	%rd<45>;


	ld.param.u32 	%r15, [_Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_0];
	ld.param.u32 	%r17, [_Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_1];
	ld.param.u32 	%r16, [_Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_2];
	ld.param.f64 	%fd39, [_Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_3];
	ld.param.f64 	%fd40, [_Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_4];
	ld.param.f64 	%fd41, [_Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_5];
	ld.param.u64 	%rd26, [_Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_7];
	ld.param.u64 	%rd27, [_Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_8];
	ld.param.u64 	%rd28, [_Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_9];
	ld.param.u64 	%rd29, [_Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_10];
	ld.param.u64 	%rd30, [_Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_11];
	ld.param.u64 	%rd31, [_Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_12];
	ld.param.u64 	%rd32, [_Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_13];
	ld.param.u64 	%rd33, [_Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_14];
	ld.param.u64 	%rd34, [_Z6renderiiiddddPdS_S_S_S_S_S_S_Ph_param_15];
	mov.u32 	%r18, %ntid.x;
	mov.u32 	%r19, %ctaid.x;
	mov.u32 	%r20, %tid.x;
	mad.lo.s32 	%r1, %r19, %r18, %r20;
	mov.u32 	%r21, %ntid.y;
	mov.u32 	%r22, %ctaid.y;
	mov.u32 	%r23, %tid.y;
	mad.lo.s32 	%r2, %r22, %r21, %r23;
	setp.ge.s32 	%p4, %r1, %r15;
	setp.ge.s32 	%p5, %r2, %r17;
	or.pred  	%p6, %p4, %p5;
	@%p6 bra 	$L__BB0_46;

	setp.lt.s32 	%p7, %r16, 1;
	@%p7 bra 	$L__BB0_46;

	cvta.to.global.u64 	%rd35, %rd34;
	mad.lo.s32 	%r25, %r2, %r15, %r1;
	mul.lo.s32 	%r26, %r25, 3;
	cvt.s64.s32 	%rd36, %r26;
	add.s64 	%rd1, %rd35, %rd36;
	cvta.to.global.u64 	%rd44, %rd33;
	cvta.to.global.u64 	%rd43, %rd32;
	cvta.to.global.u64 	%rd42, %rd31;
	cvta.to.global.u64 	%rd41, %rd27;
	cvta.to.global.u64 	%rd40, %rd26;
	cvta.to.global.u64 	%rd39, %rd29;
	cvta.to.global.u64 	%rd38, %rd28;
	cvta.to.global.u64 	%rd37, %rd30;
	cvt.rn.f64.s32 	%fd42, %r2;
	div.rn.f64 	%fd43, %fd42, %fd39;
	add.f64 	%fd1, %fd43, %fd41;
	cvt.rn.f64.s32 	%fd44, %r1;
	div.rn.f64 	%fd45, %fd44, %fd39;
	add.f64 	%fd2, %fd45, %fd40;
	mov.u32 	%r93, 0;
	mov.f64 	%fd48, 0d4000000000000000;

$L__BB0_3:
	ld.global.f64 	%fd46, [%rd37];
	setp.geu.f64 	%p8, %fd46, 0d430C6BF526340000;
	@%p8 bra 	$L__BB0_45;

	ld.global.f64 	%fd47, [%rd38];
	sub.f64 	%fd3, %fd2, %fd47;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4}, %fd3;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5}, %fd48;
	}
	and.b32  	%r6, %r5, 2146435072;
	setp.eq.s32 	%p9, %r6, 1062207488;
	abs.f64 	%fd4, %fd3;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd4;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd48;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd80, [retval0+0];
	} // callseq 0
	setp.lt.s32 	%p10, %r4, 0;
	and.pred  	%p1, %p10, %p9;
	not.pred 	%p11, %p1;
	@%p11 bra 	$L__BB0_6;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r27}, %fd80;
	}
	xor.b32  	%r28, %r27, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r29, %temp}, %fd80;
	}
	mov.b64 	%fd80, {%r29, %r28};

$L__BB0_6:
	setp.eq.f64 	%p12, %fd3, 0d0000000000000000;
	@%p12 bra 	$L__BB0_10;
	bra.uni 	$L__BB0_7;

$L__BB0_10:
	selp.b32 	%r30, %r4, 0, %p9;
	mov.u32 	%r31, 0;
	or.b32  	%r32, %r30, 2146435072;
	setp.lt.s32 	%p16, %r5, 0;
	selp.b32 	%r33, %r32, %r30, %p16;
	mov.b64 	%fd80, {%r31, %r33};
	bra.uni 	$L__BB0_11;

$L__BB0_7:
	setp.gt.s32 	%p13, %r4, -1;
	@%p13 bra 	$L__BB0_11;

	cvt.rzi.f64.f64 	%fd50, %fd48;
	setp.eq.f64 	%p14, %fd50, 0d4000000000000000;
	@%p14 bra 	$L__BB0_11;

	mov.f64 	%fd80, 0dFFF8000000000000;

$L__BB0_11:
	add.f64 	%fd10, %fd3, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r34}, %fd10;
	}
	and.b32  	%r35, %r34, 2146435072;
	setp.ne.s32 	%p17, %r35, 2146435072;
	mov.f64 	%fd81, %fd80;
	@%p17 bra 	$L__BB0_17;

	setp.gtu.f64 	%p18, %fd4, 0d7FF0000000000000;
	mov.f64 	%fd81, %fd10;
	@%p18 bra 	$L__BB0_17;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r36, %temp}, %fd48;
	}
	and.b32  	%r7, %r5, 2147483647;
	setp.eq.s32 	%p19, %r7, 2146435072;
	setp.eq.s32 	%p20, %r36, 0;
	and.pred  	%p21, %p19, %p20;
	@%p21 bra 	$L__BB0_16;
	bra.uni 	$L__BB0_14;

$L__BB0_16:
	setp.gt.f64 	%p28, %fd4, 0d3FF0000000000000;
	selp.b32 	%r43, 2146435072, 0, %p28;
	mov.u32 	%r44, 0;
	xor.b32  	%r45, %r43, 2146435072;
	setp.lt.s32 	%p29, %r5, 0;
	selp.b32 	%r46, %r45, %r43, %p29;
	setp.eq.f64 	%p30, %fd3, 0dBFF0000000000000;
	selp.b32 	%r47, 1072693248, %r46, %p30;
	mov.b64 	%fd81, {%r44, %r47};
	bra.uni 	$L__BB0_17;

$L__BB0_14:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r37, %temp}, %fd3;
	}
	and.b32  	%r38, %r4, 2147483647;
	setp.ne.s32 	%p22, %r38, 2146435072;
	setp.ne.s32 	%p23, %r37, 0;
	or.pred  	%p24, %p22, %p23;
	mov.f64 	%fd81, %fd80;
	@%p24 bra 	$L__BB0_17;

	setp.gt.s32 	%p25, %r5, -1;
	selp.b32 	%r39, 2146435072, 0, %p25;
	mov.u32 	%r40, 0;
	setp.ne.s32 	%p26, %r7, 1071644672;
	and.pred  	%p27, %p26, %p1;
	or.b32  	%r41, %r39, -2147483648;
	selp.b32 	%r42, %r41, %r39, %p27;
	mov.b64 	%fd81, {%r40, %r42};

$L__BB0_17:
	setp.eq.f64 	%p31, %fd3, 0d3FF0000000000000;
	selp.f64 	%fd14, 0d3FF0000000000000, %fd81, %p31;
	ld.global.f64 	%fd53, [%rd39];
	sub.f64 	%fd15, %fd1, %fd53;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8}, %fd15;
	}
	abs.f64 	%fd16, %fd15;
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd16;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd48;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd83, [retval0+0];
	} // callseq 1
	setp.lt.s32 	%p32, %r8, 0;
	and.pred  	%p2, %p32, %p9;
	not.pred 	%p34, %p2;
	@%p34 bra 	$L__BB0_19;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r48}, %fd83;
	}
	xor.b32  	%r49, %r48, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r50, %temp}, %fd83;
	}
	mov.b64 	%fd83, {%r50, %r49};

$L__BB0_19:
	setp.eq.f64 	%p35, %fd15, 0d0000000000000000;
	@%p35 bra 	$L__BB0_23;
	bra.uni 	$L__BB0_20;

$L__BB0_23:
	selp.b32 	%r51, %r8, 0, %p9;
	mov.u32 	%r52, 0;
	or.b32  	%r53, %r51, 2146435072;
	setp.lt.s32 	%p39, %r5, 0;
	selp.b32 	%r54, %r53, %r51, %p39;
	mov.b64 	%fd83, {%r52, %r54};
	bra.uni 	$L__BB0_24;

$L__BB0_20:
	setp.gt.s32 	%p36, %r8, -1;
	@%p36 bra 	$L__BB0_24;

	cvt.rzi.f64.f64 	%fd56, %fd48;
	setp.eq.f64 	%p37, %fd56, 0d4000000000000000;
	@%p37 bra 	$L__BB0_24;

	mov.f64 	%fd83, 0dFFF8000000000000;

$L__BB0_24:
	add.f64 	%fd22, %fd15, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r55}, %fd22;
	}
	and.b32  	%r56, %r55, 2146435072;
	setp.ne.s32 	%p40, %r56, 2146435072;
	mov.f64 	%fd84, %fd83;
	@%p40 bra 	$L__BB0_30;

	setp.gtu.f64 	%p41, %fd16, 0d7FF0000000000000;
	mov.f64 	%fd84, %fd22;
	@%p41 bra 	$L__BB0_30;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r57, %temp}, %fd48;
	}
	and.b32  	%r9, %r5, 2147483647;
	setp.eq.s32 	%p42, %r9, 2146435072;
	setp.eq.s32 	%p43, %r57, 0;
	and.pred  	%p44, %p42, %p43;
	@%p44 bra 	$L__BB0_29;
	bra.uni 	$L__BB0_27;

$L__BB0_29:
	setp.gt.f64 	%p51, %fd16, 0d3FF0000000000000;
	selp.b32 	%r64, 2146435072, 0, %p51;
	mov.u32 	%r65, 0;
	xor.b32  	%r66, %r64, 2146435072;
	setp.lt.s32 	%p52, %r5, 0;
	selp.b32 	%r67, %r66, %r64, %p52;
	setp.eq.f64 	%p53, %fd15, 0dBFF0000000000000;
	selp.b32 	%r68, 1072693248, %r67, %p53;
	mov.b64 	%fd84, {%r65, %r68};
	bra.uni 	$L__BB0_30;

$L__BB0_27:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r58, %temp}, %fd15;
	}
	and.b32  	%r59, %r8, 2147483647;
	setp.ne.s32 	%p45, %r59, 2146435072;
	setp.ne.s32 	%p46, %r58, 0;
	or.pred  	%p47, %p45, %p46;
	mov.f64 	%fd84, %fd83;
	@%p47 bra 	$L__BB0_30;

	setp.gt.s32 	%p48, %r5, -1;
	selp.b32 	%r60, 2146435072, 0, %p48;
	mov.u32 	%r61, 0;
	setp.ne.s32 	%p49, %r9, 1071644672;
	and.pred  	%p50, %p49, %p2;
	or.b32  	%r62, %r60, -2147483648;
	selp.b32 	%r63, %r62, %r60, %p50;
	mov.b64 	%fd84, {%r61, %r63};

$L__BB0_30:
	setp.eq.f64 	%p54, %fd15, 0d3FF0000000000000;
	selp.f64 	%fd59, 0d3FF0000000000000, %fd84, %p54;
	add.f64 	%fd60, %fd14, %fd59;
	sqrt.rn.f64 	%fd26, %fd60;
	ld.global.f64 	%fd61, [%rd40];
	mul.f64 	%fd62, %fd61, 0d3FCE8EC8853F6F82;
	ld.global.f64 	%fd63, [%rd41];
	div.rn.f64 	%fd27, %fd62, %fd63;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r10}, %fd27;
	}
	mov.f64 	%fd64, 0d3FD5555554F9B516;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r11}, %fd64;
	}
	and.b32  	%r12, %r11, 2146435072;
	setp.eq.s32 	%p55, %r12, 1126170624;
	abs.f64 	%fd28, %fd27;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd28;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd64;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd86, [retval0+0];
	} // callseq 2
	setp.lt.s32 	%p56, %r10, 0;
	and.pred  	%p3, %p56, %p55;
	not.pred 	%p57, %p3;
	@%p57 bra 	$L__BB0_32;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r69}, %fd86;
	}
	xor.b32  	%r70, %r69, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r71, %temp}, %fd86;
	}
	mov.b64 	%fd86, {%r71, %r70};

$L__BB0_32:
	setp.eq.f64 	%p58, %fd27, 0d0000000000000000;
	@%p58 bra 	$L__BB0_36;
	bra.uni 	$L__BB0_33;

$L__BB0_36:
	selp.b32 	%r72, %r10, 0, %p55;
	mov.u32 	%r73, 0;
	or.b32  	%r74, %r72, 2146435072;
	setp.lt.s32 	%p62, %r11, 0;
	selp.b32 	%r75, %r74, %r72, %p62;
	mov.b64 	%fd86, {%r73, %r75};
	bra.uni 	$L__BB0_37;

$L__BB0_33:
	setp.gt.s32 	%p59, %r10, -1;
	@%p59 bra 	$L__BB0_37;

	cvt.rzi.f64.f64 	%fd66, %fd64;
	setp.eq.f64 	%p60, %fd66, 0d3FD5555554F9B516;
	@%p60 bra 	$L__BB0_37;

	mov.f64 	%fd86, 0dFFF8000000000000;

$L__BB0_37:
	add.f64 	%fd34, %fd27, 0d3FD5555554F9B516;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r76}, %fd34;
	}
	and.b32  	%r77, %r76, 2146435072;
	setp.ne.s32 	%p63, %r77, 2146435072;
	mov.f64 	%fd87, %fd86;
	@%p63 bra 	$L__BB0_43;

	setp.gtu.f64 	%p64, %fd28, 0d7FF0000000000000;
	mov.f64 	%fd87, %fd34;
	@%p64 bra 	$L__BB0_43;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r78, %temp}, %fd64;
	}
	and.b32  	%r13, %r11, 2147483647;
	setp.eq.s32 	%p65, %r13, 2146435072;
	setp.eq.s32 	%p66, %r78, 0;
	and.pred  	%p67, %p65, %p66;
	@%p67 bra 	$L__BB0_42;
	bra.uni 	$L__BB0_40;

$L__BB0_42:
	setp.gt.f64 	%p74, %fd28, 0d3FF0000000000000;
	selp.b32 	%r85, 2146435072, 0, %p74;
	mov.u32 	%r86, 0;
	xor.b32  	%r87, %r85, 2146435072;
	setp.lt.s32 	%p75, %r11, 0;
	selp.b32 	%r88, %r87, %r85, %p75;
	setp.eq.f64 	%p76, %fd27, 0dBFF0000000000000;
	selp.b32 	%r89, 1072693248, %r88, %p76;
	mov.b64 	%fd87, {%r86, %r89};
	bra.uni 	$L__BB0_43;

$L__BB0_40:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r79, %temp}, %fd27;
	}
	and.b32  	%r80, %r10, 2147483647;
	setp.ne.s32 	%p68, %r80, 2146435072;
	setp.ne.s32 	%p69, %r79, 0;
	or.pred  	%p70, %p68, %p69;
	mov.f64 	%fd87, %fd86;
	@%p70 bra 	$L__BB0_43;

	setp.gt.s32 	%p71, %r11, -1;
	selp.b32 	%r81, 2146435072, 0, %p71;
	mov.u32 	%r82, 0;
	setp.ne.s32 	%p72, %r13, 1071644672;
	and.pred  	%p73, %p72, %p3;
	or.b32  	%r83, %r81, -2147483648;
	selp.b32 	%r84, %r83, %r81, %p73;
	mov.b64 	%fd87, {%r82, %r84};

$L__BB0_43:
	setp.eq.f64 	%p77, %fd27, 0d3FF0000000000000;
	selp.f64 	%fd38, 0d3FF0000000000000, %fd87, %p77;
	setp.geu.f64 	%p78, %fd26, %fd38;
	@%p78 bra 	$L__BB0_45;

	div.rn.f64 	%fd69, %fd26, %fd38;
	mov.f64 	%fd70, 0d3FF0000000000000;
	sub.f64 	%fd71, %fd70, %fd69;
	mul.f64 	%fd72, %fd71, 0d406FE00000000000;
	ld.global.f64 	%fd73, [%rd42];
	mul.f64 	%fd74, %fd72, %fd73;
	cvt.rzi.u32.f64 	%r90, %fd74;
	st.global.u8 	[%rd1], %r90;
	ld.global.f64 	%fd75, [%rd43];
	mul.f64 	%fd76, %fd72, %fd75;
	cvt.rzi.u32.f64 	%r91, %fd76;
	st.global.u8 	[%rd1+1], %r91;
	ld.global.f64 	%fd77, [%rd44];
	mul.f64 	%fd78, %fd72, %fd77;
	cvt.rzi.u32.f64 	%r92, %fd78;
	st.global.u8 	[%rd1+2], %r92;

$L__BB0_45:
	add.s32 	%r93, %r93, 1;
	add.s64 	%rd44, %rd44, 8;
	add.s64 	%rd43, %rd43, 8;
	add.s64 	%rd42, %rd42, 8;
	add.s64 	%rd41, %rd41, 8;
	add.s64 	%rd40, %rd40, 8;
	add.s64 	%rd39, %rd39, 8;
	add.s64 	%rd38, %rd38, 8;
	add.s64 	%rd37, %rd37, 8;
	setp.lt.s32 	%p79, %r93, %r16;
	@%p79 bra 	$L__BB0_3;

$L__BB0_46:
	ret;

}
.func  (.param .b64 func_retval0) __internal_accurate_pow(
	.param .b64 __internal_accurate_pow_param_0,
	.param .b64 __internal_accurate_pow_param_1
)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<53>;
	.reg .f64 	%fd<138>;


	ld.param.f64 	%fd12, [__internal_accurate_pow_param_0];
	ld.param.f64 	%fd13, [__internal_accurate_pow_param_1];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd12;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd12;
	}
	shr.u32 	%r51, %r50, 20;
	setp.ne.s32 	%p1, %r51, 0;
	@%p1 bra 	$L__BB1_2;

	mul.f64 	%fd14, %fd12, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd14;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd14;
	}
	shr.u32 	%r16, %r50, 20;
	add.s32 	%r51, %r16, -54;

$L__BB1_2:
	add.s32 	%r52, %r51, -1023;
	and.b32  	%r17, %r50, -2146435073;
	or.b32  	%r18, %r17, 1072693248;
	mov.b64 	%fd135, {%r49, %r18};
	setp.lt.u32 	%p2, %r18, 1073127583;
	@%p2 bra 	$L__BB1_4;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r19, %temp}, %fd135;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd135;
	}
	add.s32 	%r21, %r20, -1048576;
	mov.b64 	%fd135, {%r19, %r21};
	add.s32 	%r52, %r51, -1022;

$L__BB1_4:
	add.f64 	%fd15, %fd135, 0d3FF0000000000000;
	mov.f64 	%fd16, 0d3FF0000000000000;
	rcp.approx.ftz.f64 	%fd17, %fd15;
	neg.f64 	%fd18, %fd15;
	fma.rn.f64 	%fd19, %fd18, %fd17, %fd16;
	fma.rn.f64 	%fd20, %fd19, %fd19, %fd19;
	fma.rn.f64 	%fd21, %fd20, %fd17, %fd17;
	add.f64 	%fd22, %fd135, 0dBFF0000000000000;
	mul.f64 	%fd23, %fd22, %fd21;
	fma.rn.f64 	%fd24, %fd22, %fd21, %fd23;
	mul.f64 	%fd25, %fd24, %fd24;
	mov.f64 	%fd26, 0d3ED0F5D241AD3B5A;
	mov.f64 	%fd27, 0d3EB0F5FF7D2CAFE2;
	fma.rn.f64 	%fd28, %fd27, %fd25, %fd26;
	mov.f64 	%fd29, 0d3EF3B20A75488A3F;
	fma.rn.f64 	%fd30, %fd28, %fd25, %fd29;
	mov.f64 	%fd31, 0d3F1745CDE4FAECD5;
	fma.rn.f64 	%fd32, %fd30, %fd25, %fd31;
	mov.f64 	%fd33, 0d3F3C71C7258A578B;
	fma.rn.f64 	%fd34, %fd32, %fd25, %fd33;
	mov.f64 	%fd35, 0d3F6249249242B910;
	fma.rn.f64 	%fd36, %fd34, %fd25, %fd35;
	mov.f64 	%fd37, 0d3F89999999999DFB;
	fma.rn.f64 	%fd38, %fd36, %fd25, %fd37;
	sub.f64 	%fd39, %fd22, %fd24;
	add.f64 	%fd40, %fd39, %fd39;
	neg.f64 	%fd41, %fd24;
	fma.rn.f64 	%fd42, %fd41, %fd22, %fd40;
	mul.f64 	%fd43, %fd21, %fd42;
	fma.rn.f64 	%fd44, %fd25, %fd38, 0d3FB5555555555555;
	mov.f64 	%fd45, 0d3FB5555555555555;
	sub.f64 	%fd46, %fd45, %fd44;
	fma.rn.f64 	%fd47, %fd25, %fd38, %fd46;
	add.f64 	%fd48, %fd47, 0d0000000000000000;
	add.f64 	%fd49, %fd48, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd50, %fd44, %fd49;
	sub.f64 	%fd51, %fd44, %fd50;
	add.f64 	%fd52, %fd49, %fd51;
	mul.rn.f64 	%fd53, %fd24, %fd24;
	neg.f64 	%fd54, %fd53;
	fma.rn.f64 	%fd55, %fd24, %fd24, %fd54;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd43;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd43;
	}
	add.s32 	%r24, %r23, 1048576;
	mov.b64 	%fd56, {%r22, %r24};
	fma.rn.f64 	%fd57, %fd24, %fd56, %fd55;
	mul.rn.f64 	%fd58, %fd53, %fd24;
	neg.f64 	%fd59, %fd58;
	fma.rn.f64 	%fd60, %fd53, %fd24, %fd59;
	fma.rn.f64 	%fd61, %fd53, %fd43, %fd60;
	fma.rn.f64 	%fd62, %fd57, %fd24, %fd61;
	mul.rn.f64 	%fd63, %fd50, %fd58;
	neg.f64 	%fd64, %fd63;
	fma.rn.f64 	%fd65, %fd50, %fd58, %fd64;
	fma.rn.f64 	%fd66, %fd50, %fd62, %fd65;
	fma.rn.f64 	%fd67, %fd52, %fd58, %fd66;
	add.f64 	%fd68, %fd63, %fd67;
	sub.f64 	%fd69, %fd63, %fd68;
	add.f64 	%fd70, %fd67, %fd69;
	add.f64 	%fd71, %fd24, %fd68;
	sub.f64 	%fd72, %fd24, %fd71;
	add.f64 	%fd73, %fd68, %fd72;
	add.f64 	%fd74, %fd70, %fd73;
	add.f64 	%fd75, %fd43, %fd74;
	add.f64 	%fd76, %fd71, %fd75;
	sub.f64 	%fd77, %fd71, %fd76;
	add.f64 	%fd78, %fd75, %fd77;
	xor.b32  	%r25, %r52, -2147483648;
	mov.u32 	%r26, -2147483648;
	mov.u32 	%r27, 1127219200;
	mov.b64 	%fd79, {%r25, %r27};
	mov.b64 	%fd80, {%r26, %r27};
	sub.f64 	%fd81, %fd79, %fd80;
	mov.f64 	%fd82, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd83, %fd81, %fd82, %fd76;
	neg.f64 	%fd84, %fd81;
	fma.rn.f64 	%fd85, %fd84, %fd82, %fd83;
	sub.f64 	%fd86, %fd85, %fd76;
	sub.f64 	%fd87, %fd78, %fd86;
	mov.f64 	%fd88, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd89, %fd81, %fd88, %fd87;
	add.f64 	%fd90, %fd83, %fd89;
	sub.f64 	%fd91, %fd83, %fd90;
	add.f64 	%fd92, %fd89, %fd91;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd13;
	}
	shl.b32 	%r29, %r28, 1;
	setp.gt.u32 	%p3, %r29, -33554433;
	and.b32  	%r30, %r28, -15728641;
	selp.b32 	%r31, %r30, %r28, %p3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r32, %temp}, %fd13;
	}
	mov.b64 	%fd93, {%r32, %r31};
	mul.rn.f64 	%fd94, %fd90, %fd93;
	neg.f64 	%fd95, %fd94;
	fma.rn.f64 	%fd96, %fd90, %fd93, %fd95;
	fma.rn.f64 	%fd97, %fd92, %fd93, %fd96;
	add.f64 	%fd4, %fd94, %fd97;
	sub.f64 	%fd98, %fd94, %fd4;
	add.f64 	%fd5, %fd97, %fd98;
	mov.f64 	%fd99, 0d4338000000000000;
	mov.f64 	%fd100, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd101, %fd4, %fd100, %fd99;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd101;
	}
	mov.f64 	%fd102, 0dC338000000000000;
	add.rn.f64 	%fd103, %fd101, %fd102;
	mov.f64 	%fd104, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd105, %fd103, %fd104, %fd4;
	mov.f64 	%fd106, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd107, %fd103, %fd106, %fd105;
	mov.f64 	%fd108, 0d3E928AF3FCA213EA;
	mov.f64 	%fd109, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd110, %fd109, %fd107, %fd108;
	mov.f64 	%fd111, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd112, %fd110, %fd107, %fd111;
	mov.f64 	%fd113, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd114, %fd112, %fd107, %fd113;
	mov.f64 	%fd115, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd116, %fd114, %fd107, %fd115;
	mov.f64 	%fd117, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd118, %fd116, %fd107, %fd117;
	mov.f64 	%fd119, 0d3F81111111122322;
	fma.rn.f64 	%fd120, %fd118, %fd107, %fd119;
	mov.f64 	%fd121, 0d3FA55555555502A1;
	fma.rn.f64 	%fd122, %fd120, %fd107, %fd121;
	mov.f64 	%fd123, 0d3FC5555555555511;
	fma.rn.f64 	%fd124, %fd122, %fd107, %fd123;
	mov.f64 	%fd125, 0d3FE000000000000B;
	fma.rn.f64 	%fd126, %fd124, %fd107, %fd125;
	fma.rn.f64 	%fd127, %fd126, %fd107, %fd16;
	fma.rn.f64 	%fd128, %fd127, %fd107, %fd16;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r14, %temp}, %fd128;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd128;
	}
	shl.b32 	%r33, %r13, 20;
	add.s32 	%r34, %r15, %r33;
	mov.b64 	%fd136, {%r14, %r34};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r35}, %fd4;
	}
	mov.b32 	%f2, %r35;
	abs.f32 	%f1, %f2;
	setp.lt.f32 	%p4, %f1, 0f4086232B;
	@%p4 bra 	$L__BB1_7;

	setp.lt.f64 	%p5, %fd4, 0d0000000000000000;
	add.f64 	%fd129, %fd4, 0d7FF0000000000000;
	selp.f64 	%fd136, 0d0000000000000000, %fd129, %p5;
	setp.geu.f32 	%p6, %f1, 0f40874800;
	@%p6 bra 	$L__BB1_7;

	mov.f64 	%fd134, 0d4338000000000000;
	mov.f64 	%fd133, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd132, %fd4, %fd133, %fd134;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd132;
	}
	shr.u32 	%r36, %r48, 31;
	add.s32 	%r37, %r48, %r36;
	shr.s32 	%r38, %r37, 1;
	shl.b32 	%r39, %r38, 20;
	add.s32 	%r40, %r15, %r39;
	mov.b64 	%fd130, {%r14, %r40};
	sub.s32 	%r41, %r48, %r38;
	shl.b32 	%r42, %r41, 20;
	add.s32 	%r43, %r42, 1072693248;
	mov.u32 	%r44, 0;
	mov.b64 	%fd131, {%r44, %r43};
	mul.f64 	%fd136, %fd130, %fd131;

$L__BB1_7:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd136;
	}
	and.b32  	%r46, %r45, 2147483647;
	setp.eq.s32 	%p7, %r46, 2146435072;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r47, %temp}, %fd136;
	}
	setp.eq.s32 	%p8, %r47, 0;
	and.pred  	%p9, %p8, %p7;
	@%p9 bra 	$L__BB1_9;

	fma.rn.f64 	%fd136, %fd136, %fd5, %fd136;

$L__BB1_9:
	st.param.f64 	[func_retval0+0], %fd136;
	ret;

}

